// Code generated by MockGen. DO NOT EDIT.
// Source: repo.go

// Package mocks is a generated GoMock package.
package mocks

import (
	model "auth/internal/model/principal"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPrincipalRepo is a mock of PrincipalRepo interface.
type MockPrincipalRepo struct {
	ctrl     *gomock.Controller
	recorder *MockPrincipalRepoMockRecorder
}

// MockPrincipalRepoMockRecorder is the mock recorder for MockPrincipalRepo.
type MockPrincipalRepoMockRecorder struct {
	mock *MockPrincipalRepo
}

// NewMockPrincipalRepo creates a new mock instance.
func NewMockPrincipalRepo(ctrl *gomock.Controller) *MockPrincipalRepo {
	mock := &MockPrincipalRepo{ctrl: ctrl}
	mock.recorder = &MockPrincipalRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPrincipalRepo) EXPECT() *MockPrincipalRepoMockRecorder {
	return m.recorder
}

// CreatePrincipal mocks base method.
func (m *MockPrincipalRepo) CreatePrincipal(ctx context.Context, p model.Principal) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePrincipal", ctx, p)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreatePrincipal indicates an expected call of CreatePrincipal.
func (mr *MockPrincipalRepoMockRecorder) CreatePrincipal(ctx, p interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePrincipal", reflect.TypeOf((*MockPrincipalRepo)(nil).CreatePrincipal), ctx, p)
}

// GetPrincipal mocks base method.
func (m *MockPrincipalRepo) GetPrincipal(ctx context.Context, email string) (*model.Principal, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPrincipal", ctx, email)
	ret0, _ := ret[0].(*model.Principal)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPrincipal indicates an expected call of GetPrincipal.
func (mr *MockPrincipalRepoMockRecorder) GetPrincipal(ctx, email interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPrincipal", reflect.TypeOf((*MockPrincipalRepo)(nil).GetPrincipal), ctx, email)
}

// UpdatePrincipal mocks base method.
func (m *MockPrincipalRepo) UpdatePrincipal(ctx context.Context, p model.Principal) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdatePrincipal", ctx, p)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdatePrincipal indicates an expected call of UpdatePrincipal.
func (mr *MockPrincipalRepoMockRecorder) UpdatePrincipal(ctx, p interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdatePrincipal", reflect.TypeOf((*MockPrincipalRepo)(nil).UpdatePrincipal), ctx, p)
}
