<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="138f1041-e132-4961-9710-52c104088ddd" name="Changes" comment="refactor tests/charge/go">
      <change afterPath="$PROJECT_DIR$/.terminals" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Makefile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/configs/main.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/docker_compose.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/infrastructure/terminal/vault.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/other/vault/Makefile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/other/vault/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/other/vault/docker-compose.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/other/vault/example_terminals.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/other/vault/terminals.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/other/vault/vault.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/other/vault/vault_init.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/vault/vault_init.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/server/server.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tests/c2/charge_integration_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tests/c2/docker-compose.yaml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tests/c2/terminals.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/tests/c2/vault.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/application/domain/vo/terminal.go" beforeDir="false" afterPath="$PROJECT_DIR$/application/domain/vo/terminal.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/application/secrets_repository.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/config.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/config.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/config/config.go" beforeDir="false" afterPath="$PROJECT_DIR$/config/config.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/infrastructure/secrets/vault.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/infrastructure/terminal/terminal_pg.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/payment/bepaid/charge.go" beforeDir="false" afterPath="$PROJECT_DIR$/payment/bepaid/charge.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/Makefile" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/clear.sh" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/docker-compose.yaml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/tests/c2/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/tests/c2/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/vault/config/vault.json" beforeDir="false" afterPath="$PROJECT_DIR$/other/vault/vault.json" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$PROJECT_DIR$/../../../../../../../usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="true" />
    <option name="urls">
      <list>
        <option value="file://$PROJECT_DIR$/../../../../" />
      </list>
    </option>
    <option name="useGoPathFromSystemEnvironment" value="false" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectId" id="2AJBreYWdcIzpif7Tx2SYvJcIMd" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.format.on.save.advertiser.fired&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.watchers.conflict.with.on.save.actions.check.performed&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;configurable..is.expanded&quot;: &quot;false&quot;,
    &quot;configurable.GoLibrariesConfigurable.is.expanded&quot;: &quot;true&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;//wsl$/Ubuntu-20.04/home/tim/go/src/github.com/mazitovt/core-payment-lesson/tests/charge&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;run.code.analysis.last.selected.profile&quot;: &quot;pProject Default&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;go.sdk&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;DatabaseDriversLRU&quot;: [
      &quot;postgresql&quot;
    ]
  }
}</component>
  <component name="RecentsManager">
    <key name="GoMoveDeclarationDialog.RECENT_KEY">
      <recent name="$PROJECT_DIR$/application/domain" />
    </key>
    <key name="CopyFile.RECENT_KEYS">
      <recent name="\\wsl$\Ubuntu-20.04\home\tim\go\src\github.com\mazitovt\core-payment-lesson\tests\charge" />
      <recent name="\\wsl$\Ubuntu-20.04\home\tim\go\src\github.com\mazitovt\core-payment-lesson\other\vault" />
      <recent name="\\wsl$\Ubuntu-20.04\home\tim\go\src\github.com\mazitovt\core-payment-lesson\deploy\vault\volume" />
      <recent name="\\wsl$\Ubuntu-20.04\home\tim\go\src\github.com\mazitovt\core-payment-lesson\tests" />
      <recent name="\\wsl$\Ubuntu-20.04\home\tim\go\src\github.com\mazitovt\core-payment-lesson\vault" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="\\wsl$\Ubuntu-20.04\home\tim\go\src\github.com\mazitovt\core-payment-lesson\tests\charge" />
      <recent name="\\wsl$\Ubuntu-20.04\home\tim\go\src\github.com\mazitovt\core-payment-lesson\infrastructure\terminal" />
      <recent name="\\wsl$\Ubuntu-20.04\home\tim\go\src\github.com\mazitovt\core-payment-lesson\deploy\vault" />
      <recent name="\\wsl$\Ubuntu-20.04\home\tim\go\src\github.com\mazitovt\core-payment-lesson\deploy\vault\volume" />
      <recent name="\\wsl$\Ubuntu-20.04\home\tim\go\src\github.com\mazitovt\core-payment-lesson\vault\config" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.TestCharge_Integration in diLesson/tests (1)">
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="core-payment-lesson" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/mazitovt/core-payment-lesson" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="TestCharge_Integration in diLesson/tests (1)" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="core-payment-lesson" />
      <working_directory value="$PROJECT_DIR$/tests/c2" />
      <kind value="PACKAGE" />
      <package value="diLesson/tests" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestCharge_Integration\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestCharge_Integration in diLesson/tests" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="core-payment-lesson" />
      <working_directory value="$PROJECT_DIR$/tests/charge" />
      <kind value="PACKAGE" />
      <package value="diLesson/tests" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestCharge_Integration\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestCharge_Integration in diLesson/tests/charge (1)" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="core-payment-lesson" />
      <working_directory value="$PROJECT_DIR$/tests/charge" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="diLesson/tests/charge" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestCharge_Integration\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestCharge_Integration in diLesson/tests/charge (2)" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="core-payment-lesson" />
      <working_directory value="$PROJECT_DIR$/tests/charge" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="diLesson/tests/charge" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestCharge_Integration\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestCharge_Integration in diLesson/tests/charge" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="core-payment-lesson" />
      <working_directory value="$PROJECT_DIR$/tests/charge" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="diLesson/tests/charge" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestCharge_Integration\E$" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="core-payment-lesson" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <package value="github.com/mazitovt/core-payment-lesson" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestCharge_Integration in diLesson/tests (1)" />
        <item itemvalue="Go Test.TestCharge_Integration in diLesson/tests/charge (2)" />
        <item itemvalue="Go Test.TestCharge_Integration in diLesson/tests/charge (1)" />
        <item itemvalue="Go Test.TestCharge_Integration in diLesson/tests/charge" />
        <item itemvalue="Go Test.TestCharge_Integration in diLesson/tests" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="implement pay_repository_pgsql.go" />
    <MESSAGE value="minor changes" />
    <MESSAGE value="sync with &quot;fix&quot; commit" />
    <MESSAGE value="update README.md" />
    <MESSAGE value="update go.mod" />
    <MESSAGE value="refactor application layer, add enums" />
    <MESSAGE value="complete basic structs, import bepaid-sdk (mazitov branch)" />
    <MESSAGE value="move secrets to Vault" />
    <MESSAGE value="add SecretService interface, implement it with Vault, add a IoC container to application" />
    <MESSAGE value="add TableName to tell gorm table name" />
    <MESSAGE value="change SecretsRepository contract" />
    <MESSAGE value="add Config struct" />
    <MESSAGE value="update .gitignore" />
    <MESSAGE value="add end-to-end test" />
    <MESSAGE value="refactor" />
    <MESSAGE value="update go.mod and go.sum" />
    <MESSAGE value="update main.go" />
    <MESSAGE value="delete unused files" />
    <MESSAGE value="refactor tests/charge/go" />
    <option name="LAST_COMMIT_MESSAGE" value="refactor tests/charge/go" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="XDebuggerManager">
    <watches-manager>
      <configuration name="GoApplicationRunConfiguration">
        <watch expression="*(*&quot;diLesson/infrastructure/terminal.BepaidShopCredentials&quot;)(824639184096)" />
      </configuration>
    </watches-manager>
  </component>
</project>